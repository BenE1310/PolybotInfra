apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-init
  namespace: mongodb
spec:
  backoffLimit: 4
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: mongo-init
          image: mongo:5
          command:
            - bash
            - -c
            - |
              echo "ðŸ“± Waiting for all MongoDB pods to be ready..."

              for i in 0 1 2; do
                until mongo --host mongodb-$i.mongodb.mongodb.svc.cluster.local:27017 --eval "db.adminCommand('ping')" >/dev/null 2>&1; do
                  echo "âŒ› mongodb-$i not ready, sleeping 3s..."
                  sleep 3
                done
              done

              echo "ðŸ”Ž Checking replica set status..."
              rs_status=$(mongo --quiet --host mongodb-0.mongodb.mongodb.svc.cluster.local:27017 --eval "rs.status().ok" || echo "0")

              if [ "$rs_status" = "1" ]; then
                echo "âœ… Replica set already initialized."
                exit 0
              fi

              echo "ðŸš€ Running rs.initiate..."
              mongo --host mongodb-0.mongodb.mongodb.svc.cluster.local:27017 --eval '
                rs.initiate({
                  _id: "rs0",
                  members: [
                    { _id: 0, host: "mongodb-0.mongodb.mongodb.svc.cluster.local:27017" },
                    { _id: 1, host: "mongodb-1.mongodb.mongodb.svc.cluster.local:27017" },
                    { _id: 2, host: "mongodb-2.mongodb.mongodb.svc.cluster.local:27017" }
                  ]
                })
              '

              echo "âœ… Replica set initialization complete."
